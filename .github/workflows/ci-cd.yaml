name: Django CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r savannah_test/requirements.txt
          pip install coverage pytest pytest-django

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U test_user; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Setup database schema
        env:
          PGPASSWORD: test_password
        run: |
          echo "Setting up database schema..."
          psql -h localhost -U test_user -d test_db -f database/schema_ci.sql
          echo "Schema setup completed"
          echo "Verifying tables exist..."
          psql -h localhost -U test_user -d test_db -c "\dt"

      # - name: Run tests with coverage
      #   env:
      #     DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
      #     POSTGRES_DB: test_db
      #     POSTGRES_USER: test_user
      #     POSTGRES_PASSWORD: test_password
      #     POSTGRES_HOST: localhost
      #     POSTGRES_PORT: 5432
      #     DEBUG: "False"
      #     SECRET_KEY: test-secret-key
      #     DJANGO_SETTINGS_MODULE: savannah_test.test_settings
      #     TESTING: "True"
      #   run: |
      #     cd savannah_test
      #     coverage run --source='.' manage.py test
      #     coverage xml

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v2
      #   with:
      #     file: ./savannah_test/coverage.xml

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          vercel-args: "--prod"

          