name: Django CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r savannah_test/requirements.txt
          pip install coverage pytest pytest-django

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U test_user; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Setup database schema
        env:
          PGPASSWORD: test_password
        run: |
          echo "Setting up database schema..."
          psql -h localhost -U test_user -d test_db -f database/schema_ci.sql
          echo "Schema setup completed"
          echo "Verifying tables exist..."
          psql -h localhost -U test_user -d test_db -c "\dt"

      - name: Run tests with coverage
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          DEBUG: "False"
          SECRET_KEY: test-secret-key
          DJANGO_SETTINGS_MODULE: savannah_test.test_settings
          TESTING: "True"
        run: |
          cd savannah_test
          echo "üß™ Running tests..."
          python -m pytest --tb=short -v
          echo "‚úÖ Tests completed"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./savannah_test/coverage.xml
        continue-on-error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

      - name: Deploy to VPS Server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          MOBILE_SASA_API_TOKEN: ${{ secrets.MOBILE_SASA_API_TOKEN }}
        run: |
          echo "üöÄ Starting deployment to VPS server..."

          # Copy Django project files
          scp -r -o StrictHostKeyChecking=no \
            --exclude='venv' \
            --exclude='__pycache__' \
            --exclude='*.pyc' \
            --exclude='.git' \
            savannah_test/* $SSH_USER@$SSH_HOST:/var/www/savannah/savannah_test/

          # Copy requirements.txt
          scp -o StrictHostKeyChecking=no requirements.txt $SSH_USER@$SSH_HOST:/var/www/savannah/

          # Deploy with environment setup
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << EOF
            echo "üì¶ Installing dependencies..."
            cd /var/www/savannah
            pip3 install -r requirements.txt --quiet
            
            echo "‚öôÔ∏è Setting up environment variables..."
            cat > /var/www/savannah/savannah_test/.env << 'ENVEOF'
          MOBILE_SASA_API_TOKEN=$MOBILE_SASA_API_TOKEN
          MOBILE_SASA_SENDER_ID=MOBILESASA
          SECRET_KEY=django-production-secret-key-2024
          POSTGRES_HOST=localhost
          POSTGRES_PORT=5432
          POSTGRES_DB=customer_order_db
          POSTGRES_USER=postgres
          POSTGRES_PASSWORD=root
          DEBUG=False
          ENVEOF
            
            echo "üîÑ Restarting Django service..."
            pkill -f 'python3 manage.py runserver' || true
            sleep 2
            
            cd /var/www/savannah/savannah_test
            export MOBILE_SASA_API_TOKEN=$MOBILE_SASA_API_TOKEN
            export MOBILE_SASA_SENDER_ID=MOBILESASA
            export SECRET_KEY=django-production-secret-key-2024
            export POSTGRES_HOST=localhost
            export POSTGRES_PORT=5432
            export POSTGRES_DB=customer_order_db
            export POSTGRES_USER=postgres
            export POSTGRES_PASSWORD=root
            export DEBUG=False
            
            nohup python3 manage.py runserver 0.0.0.0:8003 > django.log 2>&1 &
            sleep 3
            
            echo "üîç Checking service status..."
            if curl -s -o /dev/null -w '%{http_code}' http://localhost:8003/api/auth/oidc-info/ | grep -q "200"; then
              echo "‚úÖ Deployment successful - Service is running"
            else
              echo "‚ùå Service may not be responding"
              exit 1
            fi
          EOF

          echo "üéâ Deployment completed successfully!"
          echo "üåê Application is available at: http://$SSH_HOST:8003"
